<?php

namespace BF\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
	public function myLogin($username)
  {
    // MÃ©thode 1 : en passant par l'EntityManager
    $queryBuilder = $this->_em->createQueryBuilder()
      ->select('u')
      ->from($this->_entityName, 'u')
    ;
    $query = $queryBuilder->getQuery();
    $results = $query->getResult();
    return $results;
  }
  public function globalRanking()
  {
    $qb = $this->createQueryBuilder('u');

    $qb->orderBy('u.points', 'DESC');
    
    return $qb
      ->getQuery()
      ->getResult()
    ;
  }
  public function countryRanking($country)
  {
    $qb = $this->createQueryBuilder('u');

    $qb->Where('u.country = :country')
         ->setParameter('country', $country)
       ->orderBy('u.points', 'DESC')
    ;
    return $qb
      ->getQuery()
      ->getResult()
    ;
  }
  public function stateRanking($state)
  {
    $qb = $this->createQueryBuilder('u');

    $qb->Where('u.state = :state')
         ->setParameter('state', $state)
       ->orderBy('u.points', 'DESC')
    ;
    return $qb
      ->getQuery()
      ->getResult()
    ;
  }
  public function findUserLike( $term, $limit = 10 )
  {
   
    $qb = $this->createQueryBuilder('u');
    $qb
    ->where('u.username LIKE :term')
      ->setParameter('term', '%'.$term.'%')
    ->setMaxResults($limit);
   
    $arrayAss= $qb->getQuery()
  ->getArrayResult();
 
  // Transformer le tableau associatif en un tableau standard
  $array = array();
  $i = 1;
  foreach($arrayAss as $data)
  {
    $array[] = array("id"=>$data['id'], "name"=>$data['username'], "value"=>$data['username']);
    $i++;
  }
 
  return $array;
  }
}
